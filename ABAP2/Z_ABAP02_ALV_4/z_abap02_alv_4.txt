REPORT z_abap02_alv_4.

TABLES: mara, makt.

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE text-001.
SELECT-OPTIONS:
  p_matnr FOR mara-matnr,
  p_maktx FOR makt-maktx.
SELECTION-SCREEN END OF BLOCK b1.

CLASS lcl_app DEFINITION.

  PUBLIC SECTION.

    METHODS:
      selecionar_dados,
      configura_alv,
      exibir_resultados.

  PROTECTED SECTION.

  PRIVATE SECTION.

    TYPES:

      BEGIN OF estrutura_resultado,
        matnr TYPE mara-matnr, " ID
        maktx TYPE makt-maktx, " Texto de descrição
        meins TYPE mara-meins, " Unidade básica
        bstme TYPE mara-bstme, " Unidade pedido
        mtart TYPE mara-mtart, " Tipo de material
      END OF estrutura_resultado,

      BEGIN OF estrutura_mara,
        matnr TYPE mara-matnr,
        meins TYPE mara-meins,
        bstme TYPE mara-bstme,
        mtart TYPE mara-mtart,
      END OF estrutura_mara,

      BEGIN OF estrutura_makt,
        matnr TYPE makt-matnr,
        maktx TYPE makt-maktx,
      END OF estrutura_makt.


    DATA: o_alv            TYPE REF TO cl_gui_alv_grid,
          o_container      TYPE REF TO cl_gui_docking_container,
          tab_selecao_mara TYPE STANDARD TABLE OF estrutura_mara,
          tab_selecao_makt TYPE STANDARD TABLE OF estrutura_makt,
          tab_resultados   TYPE STANDARD TABLE OF estrutura_resultado.


    METHODS:
      generate_field_catalog
        RETURNING
          VALUE(r_result) TYPE lvc_t_fcat,
      tratamento_dados.

ENDCLASS.

CLASS lcl_app IMPLEMENTATION.

  METHOD selecionar_dados.

    SELECT matnr meins bstme mtart
       FROM mara
       INTO TABLE tab_selecao_mara
       WHERE matnr IN p_matnr.

    IF sy-subrc <> 0.
      MESSAGE w000(z_abap02_alv_msg).
      EXIT.
    ENDIF.

    SELECT matnr maktx
       FROM makt
       INTO TABLE tab_selecao_makt
       WHERE ( matnr IN p_matnr ) AND ( maktx IN p_maktx ).

    IF sy-subrc <> 0.
      MESSAGE w000(z_abap02_alv_msg).
      EXIT.
    ENDIF.

    tratamento_dados( ).

  ENDMETHOD.

  METHOD tratamento_dados.
    DATA:
      estrutura     TYPE estrutura_resultado,
      tab_estrutura TYPE STANDARD TABLE OF estrutura_resultado.

    SORT:
        tab_selecao_mara BY matnr,
        tab_selecao_makt BY matnr.

    FIELD-SYMBOLS:
      <tab_selecao_mara> TYPE estrutura_mara,
      <tab_selecao_makt> TYPE estrutura_makt.

    LOOP AT tab_selecao_makt ASSIGNING <tab_selecao_makt>.

      CLEAR:
        estrutura.

      estrutura-matnr = <tab_selecao_makt>-matnr.
      estrutura-maktx = <tab_selecao_makt>-maktx.

      READ TABLE tab_selecao_mara
        ASSIGNING <tab_selecao_mara>
        WITH KEY matnr = <tab_selecao_makt>-matnr
      BINARY SEARCH.

      IF sy-subrc = 0.
        estrutura-meins = <tab_selecao_mara>-meins.
        estrutura-bstme = <tab_selecao_mara>-bstme.
        estrutura-mtart = <tab_selecao_mara>-mtart.
      ENDIF.

      APPEND estrutura TO tab_estrutura.

    ENDLOOP.

    tab_resultados[] = tab_estrutura[].

  ENDMETHOD.


  METHOD exibir_resultados.
    o_alv->refresh_table_display( ).
  ENDMETHOD.

  METHOD configura_alv.

    IF me->o_container IS BOUND.
      EXIT.
    ENDIF.

    o_container = NEW cl_gui_docking_container(
        repid                       = sy-repid
        dynnr                       = sy-dynnr
        extension                   = 2000
    ).

    o_alv = NEW cl_gui_alv_grid(
        i_parent          = o_container
    ).

    DATA: lt_fcat TYPE lvc_t_fcat.

    lt_fcat = generate_field_catalog( ).

    o_alv->set_table_for_first_display(
      CHANGING
        it_outtab                     = tab_resultados
        it_fieldcatalog               = lt_fcat
      EXCEPTIONS
        invalid_parameter_combination = 1
        program_error                 = 2
        too_many_lines                = 3
        OTHERS                        = 4
    ).
    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
                 WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

  ENDMETHOD.


  METHOD generate_field_catalog.
    DATA:
            catalogo TYPE lvc_t_fcat.

    FIELD-SYMBOLS:
        <catalogo> TYPE lvc_s_fcat.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        i_structure_name       = 'MARA'
      CHANGING
        ct_fieldcat            = catalogo
      EXCEPTIONS
        inconsistent_interface = 1
        program_error          = 2
        OTHERS                 = 3.

    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

    LOOP AT catalogo ASSIGNING <catalogo>.
      CASE <catalogo>-fieldname.
        WHEN 'MATNR'.
          APPEND <catalogo> TO r_result.
        WHEN 'MEINS'.
          APPEND <catalogo> TO r_result.
        WHEN 'BSTME'.
          APPEND <catalogo> TO r_result.
        WHEN 'MTART'.
          APPEND <catalogo> TO r_result.
      ENDCASE.
    ENDLOOP.


    REFRESH:
        catalogo.


    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        i_structure_name       = 'MAKT'
      CHANGING
        ct_fieldcat            = catalogo
      EXCEPTIONS
        inconsistent_interface = 1
        program_error          = 2
        OTHERS                 = 3.

    IF sy-subrc <> 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.

    LOOP AT catalogo ASSIGNING <catalogo>.
      CASE <catalogo>-fieldname.
        WHEN 'MAKTX'.
          APPEND <catalogo> TO r_result.
      ENDCASE.
    ENDLOOP.

  ENDMETHOD.

ENDCLASS.

START-OF-SELECTION.

  DATA: lo_app TYPE REF TO lcl_app.

  lo_app = NEW #( ).

  lo_app->selecionar_dados( ).
  CALL SCREEN 9000.

*&---------------------------------------------------------------------*
*&      Module  EXIBIR_ALV  OUTPUT
*&---------------------------------------------------------------------*
MODULE exibir_alv OUTPUT.
  lo_app->configura_alv( ).
ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_9000  INPUT
*&---------------------------------------------------------------------*
MODULE user_command_9000 INPUT.
  CASE sy-ucomm.
    WHEN 'BACK' OR 'EXIT' OR 'CANCEL'.
      LEAVE TO SCREEN 0.
    WHEN 'UPDATE'.
      lo_app->exibir_resultados( ).
  ENDCASE.
ENDMODULE.

INCLUDE z_abap02_alv_4_status_9000o01.
*INCLUDE z_abap02_alv_3_status_9000o01.
